angular.module("adminModule",[]).controller("adminCtrl",function($scope,Page,$http,Selection,$interval){Page.set_title_and_nav("Verwaltung | Crucio","Admin"),$scope.user=angular.fromJson(sessionStorage.user),$scope.user_search={semester:"",group:"",login:"",query:"",query_keys:["group_name","username"]},$scope.comment_search={question_id:"",username:"",query:"",query_keys:["question","comment","username","question_id"]},$scope.update_activity=!1,$scope.show_activity={search_query:!1,result:!1,login:!1,register:!1,comment:!1,exam_new:!1,exam_update:!1},$scope.$watch("comment_search",function(newValue,oldValue){$scope.questions_by_comment_display=[],$scope.questions_by_comment&&$scope.questions_by_comment.forEach(function(comments){for(var i=0;i<comments.length;i++){var comment=comments[i];if(Selection.is_element_included(comment,newValue)){for(var found_idx=-1,j=0;j<$scope.questions_by_comment_display.length;j++)if($scope.questions_by_comment_display[j][0].question==comment.question){found_idx=j;break}found_idx>-1?$scope.questions_by_comment_display[found_idx].push(comment):$scope.questions_by_comment_display.push([comment])}}}),$scope.questions_by_comment_display.sort(function(a,b){return b[0].date-a[0].date})},!0),$http.get("api/v1/users").success(function(data){$scope.users=data.users,$scope.distinct_semesters=Selection.find_distinct($scope.users,"semester"),$scope.distinct_semesters.sort(function(a,b){return a-b}),$scope.distinct_groups=["Standard","Admin","Autor"],$scope.ready=1}),$http.get("api/v1/comments").success(function(data){$scope.comments=data.comments,$scope.distinct_questions=Selection.find_distinct($scope.comments,"question_id"),$scope.distinct_users=Selection.find_distinct($scope.comments,"username"),$scope.questions_by_comment=[],$scope.comments.forEach(function(c){for(var found=-1,i=0;i<$scope.questions_by_comment.length;i++)if($scope.questions_by_comment[i][0].question==c.question){found=i;break}found>-1?$scope.questions_by_comment[found].push(c):$scope.questions_by_comment.push([c])}),$scope.questions_by_comment_display=$scope.questions_by_comment}),$http.get("api/v1/whitelist").success(function(data){$scope.whitelist=data.whitelist}),$http.get("api/v1/stats/general").success(function(data){$scope.stats=data.stats}),$scope.add_mail=function(){var email=$scope.new_whitelist_mail;if(email.length){$scope.whitelist.push({username:"",mail_address:email});var post_data={mail_address:email.replace("@","(@)")};$http.post("api/v1/whitelist",post_data).success(function(data){})}},$scope.remove_mail=function(index){var email=$scope.whitelist[index].mail_address;email.length&&($scope.whitelist.splice(index,1),$http["delete"]("api/v1/whitelist/"+email).success(function(data){}))},$scope.send_mail=function(){var mailAddresses="";$("#user-table tbody tr:visible").children("td").children("a").each(function(i,obj){mailAddresses+=$(obj).attr("data-original-title")+","}),mailAddresses=mailAddresses.slice(0,-1),window.location.href="mailto:"+mailAddresses},$scope.change_group=function(index){var user_id=$scope.users[index].user_id,group_id=$scope.users[index].group_id;if(1==user_id)return!1;2==group_id?(group_id=1,$scope.users[index].group_name="Standard"):3==group_id?(group_id=2,$scope.users[index].group_name="Admin"):(group_id=3,$scope.users[index].group_name="Autor");var post_data={group_id:group_id};$scope.users[index].group_id=group_id,$http.put("api/v1/users/"+user_id+"/group",post_data).success(function(data){})},$scope.is_today=function(date){var today=new Date,date_c=new Date(1e3*date);return today.toDateString()==date_c.toDateString()?!0:!1},$scope.is_yesterday=function(date){var today=new Date,diff=today-864e5,yesterday=new Date(diff),date_c=new Date(1e3*date);return yesterday.toDateString()==date_c.toDateString()?!0:!1},$scope.user_in_selection=function(index){return Selection.is_element_included($scope.users[index],$scope.user_search)},$scope.user_in_selection_count=function(){return Selection.count($scope.users,$scope.user_search)},$scope.comment_in_selection_count=function(){return Selection.count($scope.comments,$scope.comment_search)},$scope.increase_semester=function(){var post_data={number:"1"};$http.post("api/v1/admin/change-semester/dFt(45i$hBmk*I",post_data).success(function(data){alert(data.status)})},$scope.decrease_semester=function(){var post_data={number:"-1"};$http.post("api/v1/admin/change-semester/dFt(45i$hBmk*I",post_data).success(function(data){alert(data.status)})},$scope.remove_test_account=function(index){$http["delete"]("api/v1/users/test-account").success(function(data){alert(data.status)})}}),angular.module("authorModule",[]).controller("authorCtrl",function($scope,Page,$location,$http,Selection){Page.set_title_and_nav("Autor | Crucio","Autor"),$scope.user=angular.fromJson(sessionStorage.user),$scope.subject_list=subject_list,$scope.exam_search={subject:"",semester:"",author:$scope.user.username,query:"",query_keys:["subject","author","date"]},$scope.comment_search={username_added:"",username:"",query:"",query_keys:["question","comment","username","question_id"]},$scope.$watch("comment_search",function(newValue){$scope.questions_by_comment_display=[],$scope.questions_by_comment.forEach(function(comments){for(var i=0;i<comments.length;i++){var comment=comments[i];if(Selection.is_element_included(comment,newValue)){for(var found_idx=-1,j=0;j<$scope.questions_by_comment_display.length;j++)if($scope.questions_by_comment_display[j][0].question==comment.question){found_idx=j;break}found_idx>-1?$scope.questions_by_comment_display[found_idx].push(comment):$scope.questions_by_comment_display.push([comment])}}}),$scope.questions_by_comment_display.sort(function(a,b){return b[0].date-a[0].date})},!0),$http.get("api/v1/exams/all-visibility").success(function(data){$scope.exams=data.exams,$scope.distinct_semesters=[],$scope.exams.forEach(function(entry){-1==$scope.distinct_semesters.indexOf(entry.semester)&&$scope.distinct_semesters.push(entry.semester)}),$scope.distinct_semesters.sort(),$scope.distinct_subjects=[],$scope.exams.forEach(function(entry){-1==$scope.distinct_subjects.indexOf(entry.subject)&&$scope.distinct_subjects.push(entry.subject)}),$scope.distinct_subjects.sort(),$scope.distinct_authors=[],$scope.exams.forEach(function(entry){-1==$scope.distinct_authors.indexOf(entry.author)&&$scope.distinct_authors.push(entry.author)}),$scope.distinct_authors.sort(),$scope.ready=1}),$http.get("api/v1/comments/author/"+$scope.user.user_id).success(function(data){$scope.comments=data.comments,$scope.distinct_users=[],$scope.distinct_users_added=[],$scope.distinct_users=Selection.find_distinct($scope.comments,"username"),$scope.distinct_users_added=Selection.find_distinct($scope.comments,"username_added"),$scope.questions_by_comment=[],$scope.comments.forEach(function(c){for(var found=-1,i=0;i<$scope.questions_by_comment.length;i++)if($scope.questions_by_comment[i][0].question==c.question){found=i;break}found>0?$scope.questions_by_comment[found].push(c):$scope.questions_by_comment.push([c])}),$scope.questions_by_comment.sort(function(a,b){return b[0].date-a[0].date}),$scope.questions_by_comment_display=$scope.questions_by_comment,$scope.comment_search.username_added=$scope.user.username}),$scope.new_exam=function(){var post_data={subject:"",professor:"",semester:"",date:"",type:"",user_id_added:$scope.user.user_id,duration:"",notes:""};$http.post("api/v1/exams",post_data).success(function(data,status,headers){$location.path("/edit-exam").search("id",data.exam_id)})},$scope.comment_in_selection=function(index){return Selection.is_element_included($scope.comments[index],$scope.comment_search)},$scope.comment_in_selection_count=function(){return Selection.count($scope.comments,$scope.comment_search)},$scope.exam_in_selection=function(index){return Selection.is_element_included($scope.exams[index],$scope.exam_search)},$scope.exam_in_selection_count=function(){return Selection.count($scope.exams,$scope.exam_search)}}).controller("editCtrl",function($scope,$routeParams,Page,$location,$http,FileUploader){function remake_uploader_array(){$scope.uploader_array=new Array;for(var i=0;i<$scope.exam.questions.length;i++){{var uploader=new FileUploader({url:"/public/php/upload-file.php",formData:i});$scope.exam.questions[i]}uploader.onSuccessItem=function(fileItem,response){var j=fileItem.formData;$scope.exam.questions[j].question_image_url=response.upload_name},$scope.uploader_array.push(uploader)}}function resize_overscroll(){var sidebar_height=$(this).height()-300+$footer.height();sidebar_height>$content_2.height()&&(sidebar_height=$content_2.height()),$sidebar.height(sidebar_height)}Page.set_title_and_nav("Klausur | Crucio","Autor"),$scope.ready=0,$scope.user=angular.fromJson(sessionStorage.user),$scope.exam_id=$routeParams.id,$scope.open_question_id=$routeParams.question_id,$scope.subject_list=subject_list,$scope.has_changed=0,$scope.number_changed=0,$scope.is_saving=0,$scope.uploader=new FileUploader({url:"/public/php/upload-file.php"}),$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.exam.file_name=response.upload_name},$scope.uploader_array=[];{var $footer=$("#footer"),$sidebar=$(".edit-exam-wrapper"),$content_2=$(".edit-exam-wrapper .exam-edit-list-group");$scope.$watch("exam",function(newValue,oldValue){$scope.number_changed>1&&($scope.has_changed=1),$scope.number_changed+=1},!0)}$("body").on("shown.bs.tab",'a[data-toggle="tab"]',function(e){var previous=$(this).closest(".list-group").children(".active");previous.removeClass("active"),$(e.target).addClass("active")}),$scope.$on("$locationChangeStart",function(event,next,current){if(1==$scope.has_changed){var confirmClose=confirm("Die Änderungen an deiner Klausur bleiben dann ungespeichert. Wirklich verlassen?");confirmClose||event.preventDefault()}}),$(window).on("resize",function(){resize_overscroll()}),$http.get("api/v1/exams/"+$scope.exam_id).success(function(data){$scope.exam=data,$scope.exam.semester=parseInt(data.semester),$scope.exam.duration=parseInt(data.duration);for(var i=0;i<$scope.exam.questions.length;i++)0==$scope.exam.questions[i].topic.length&&($scope.exam.questions[i].topic="Sonstiges");remake_uploader_array(),0==$scope.exam.questions.length&&$scope.add_question(0,!1),$scope.exam.subject||($scope.exam.subject="Allgemeine Pathologie",$scope.exam.sort="Erstklausur"),$scope.open_question_id,$scope.ready=1,setTimeout(function(){resize_overscroll()},10)}),$scope.add_question=function(show,scroll_to_question){"undefined"==typeof scroll_to_question&&(scroll_to_question=!0);var question={};if(question.question="",question.type=5,question.correct_answer=0,question.answers=new Array("","","","","",""),question.topic="Sonstiges",$scope.exam.questions.push(question),$scope.open_question_id=0,remake_uploader_array(),setTimeout(function(){resize_overscroll()},10),scroll_to_question){var new_show=$scope.exam.questions.length+1;setTimeout(function(){$(".edit-exam-wrapper a:nth-child("+new_show+")").tab("show")},10)}},$scope.delete_question=function(index){var question_id=$scope.exam.questions[index].question_id;question_id&&$http["delete"]("api/v1/questions/"+question_id).success(function(data,status,headers){}),$scope.exam.questions.splice(index,1),remake_uploader_array();var new_show=index+1;setTimeout(function(){$(".edit-exam-wrapper a:nth-child("+new_show+")").tab("show")},10),0==$scope.exam.questions.length&&$scope.add_question(1),setTimeout(function(){resize_overscroll()},10)},$scope.leave_edit=function(){$scope.$apply($location.path($scope.next_route))},$scope.save_exam=function(){var validate=!0;if($scope.exam.subject||(validate=!1),$scope.exam.semester<1&&(validate=!1),$scope.exam.date||(validate=!1),validate){$scope.is_saving=1;var post_data=$scope.exam;$http.put("api/v1/exams/"+$scope.exam_id,post_data).success(function(data){}),$scope.exam.questions.forEach(function(question){var validate_question=!0;if(question.question.length||(validate_question=!1),question.question_id&&(validate_question=!0),validate_question){!question.explanation,question.explanation="",question.question_image_url||(question.question_image_url="");var post_question_data={question:question.question,topic:question.topic,type:question.type,answers:question.answers,correct_answer:question.correct_answer,exam_id:$scope.exam.exam_id,user_id_added:$scope.user.user_id,explanation:question.explanation,question_image_url:question.question_image_url};question.question_id?$http.put("api/v1/questions/"+question.question_id,post_question_data).success(function(data){}):$http.post("api/v1/questions",post_question_data).success(function(data){question.question_id=data.question_id})}}),$scope.has_changed=0,$scope.is_saving=0}else alert("Es fehlen noch allgemeine Infos zur Klausur.")},$scope.delete_exam=function(){$http["delete"]("api/v1/exams/"+$scope.exam.exam_id).success(function(data){$location.url("/author")})}});var base_url=window.location.origin,is_dev=7==base_url.indexOf("dev")?1:0,subject_list={"Anästhesie und Intensivmedizin":[],Biologie:[],Biochemie:["Chemie der Kohlenhydrate","Chemie der Aminosäuren, Peptide und Proteine","Chemie der Fettsäuren und Lipide","Chemie der Nukleotide und Nukleinsäuren","Vitamine und Koenzyme","Enzyme","Ernährung, Verdauung, Resorption","Abbau der Kohlenhydrate","Abbau der Fettsäuren, Ketonkörper","Aminosäurestoffwechsel","Zitratzyklus und Atmungskette","Glykogenstoffwechsel, Glukoneogenese","Biosynthese der Fettsäuren, Lipogenese","Mineral- und Elektrolythaushalt","Subzelluläre Strukturen","Nukleinsäuren, genetische Information, Molekularbiologie","Hormone","Immunchemie","Blut","Leber","Fettgewebe","Niere, Harn","Muskelgewebe, Bewegung","Binde- und Stützgewebe","Nervensystem"],Physik:[],Physiologie:["Allgemeine und Zellphysiologie, Zellerregung","Blut und Immunsystem","Herz","Blutkreislauf","Atmung","Arbeit- und Leistungsphysiologie","Ernährung, Verdauungstrakt, Leber","Energie- und Wärmehaushalt","Wasser- und Elektrolythaushalt, Nierenfunktion","Hormonale Regulationen","Sexualentwicklung und Reproduktionsphysiologie","Funktionsprinzipien des Nervensystems","Muskulatur","Vegetatives Nervensystem","Motorik","Somatoviszerale Sensorik","Visuelles System","Auditorisches System","Chemische Sinne","Integrative Leistungen des Zentralnervensystems"],Chemie:[],"Klinische Chemie":[],Histologie:[],"Gynäkologie":[],Chirurgie:[],Pharmakologie:[],"Allgemeine Pathologie":[],"Mikrobiologie / Virologie / Immunologie / Hygiene":[],Psychologie:[]},crucioApp=angular.module("crucioApp",["ngRoute","ngSanitize","angular-loading-bar","ui.bootstrap","angularFileUpload","textAngular","angles","ipCookie","crucioModule","userModule","learnModule","authorModule","adminModule"]);crucioApp.config(function($routeProvider,$locationProvider){$routeProvider.when("",{templateUrl:"index.php",controller:"loginCtrl"}).when("/",{templateUrl:"index.php",controller:"loginCtrl"}).when("/forgot-password",{templateUrl:"forgot-password.php",controller:"forgotPasswordCtrl"}).when("/register",{templateUrl:"register.php",controller:"registerCtrl"}).when("/activate-account",{templateUrl:"activate-account.php",controller:"activateCtrl"}).when("/contact",{templateUrl:"contact.php",controller:"contactCtrl"}).when("/about",{templateUrl:"about.php",controller:"aboutCtrl"}).when("/blog",{templateUrl:"blog.php",controller:"blogCtrl"}).when("/stats",{templateUrl:"stats.php",controller:"blogCtrl"}).when("/questions",{templateUrl:"views/questions.html",controller:"questionsCtrl"}).when("/author",{templateUrl:"views/author.html",controller:"authorCtrl"}).when("/admin",{templateUrl:"views/admin.html",controller:"adminCtrl"}).when("/account",{templateUrl:"views/account.html",controller:"accountCtrl"}).when("/settings",{templateUrl:"views/settings.html",controller:"settingsCtrl"}).when("/edit-exam",{templateUrl:"views/edit-exam.html",controller:"editCtrl"}).when("/question",{templateUrl:"views/question.html",controller:"questionCtrl"}).when("/exam",{templateUrl:"views/exam.html",controller:"examCtrl"}).when("/statistics",{templateUrl:"views/statistics.html",controller:"statisticsCtrl"}).when("/exam-pdf",{templateUrl:"exam-pdf.php",controller:"examCtrl"}).when("/exam-solution-pdf",{templateUrl:"exam-solution-pdf.php",controller:"examCtrl"}).when("/analysis",{templateUrl:"views/analysis.html",controller:"analysisCtrl"}).when("/403",{templateUrl:"views/403.html",controller:"errorCtrl"}).when("/404",{templateUrl:"views/404.html",controller:"errorCtrl"}).when("/500",{templateUrl:"views/500.html",controller:"errorCtrl"}).otherwise({redirectTo:"/404"}),$locationProvider.html5Mode(!0)}),crucioApp.run(function(ipCookie,$rootScope,$location){var routesThatDontRequireAuth=["/","/contact","/about","/blog","/register","/activate-account","/forgot-password"],routesThatLogin=["/","/register","/forgot-password"],routesForAuthor=["/author","/edit-exam"],routesForAdmin=["/admin"];$rootScope.user=angular.fromJson(sessionStorage.user),$rootScope.is_dev=is_dev;var cookieUser=ipCookie("CrucioUser");$rootScope.user||cookieUser&&($rootScope.user=cookieUser,sessionStorage.user=angular.toJson(cookieUser));var routeClean=function(route){var route_c=route;return route.indexOf("?")>-1&&(route_c=route.substr(0,route.indexOf("?"))),routesThatDontRequireAuth.indexOf(route_c)>-1?1:0},routeLogin=function(route){var route_c=route;return route.indexOf("?")>-1&&(route_c=route.substr(0,route.indexOf("?"))),routesThatLogin.indexOf(route_c)>-1?1:0},routeAuthor=function(route){var route_c=route;return route.indexOf("?")>-1&&(route_c=route.substr(0,route.indexOf("?"))),routesForAuthor.indexOf(route_c)>-1?1:0},routeAdmin=function(route){var route_c=route;return route.indexOf("?")>-1&&(route_c=route.substr(0,route.indexOf("?"))),routesForAdmin.indexOf(route_c)>-1?1:0};if($rootScope.user)var isLoggedIn=$rootScope.user.group_id?1:0,isAuthor=3==$rootScope.user.group_id?1:0,isAdmin=2==$rootScope.user.group_id?1:0;else var isLoggedIn=0,isAuthor=0,isAdmin=0;!routeClean($location.url())&&!isLoggedIn,routeLogin($location.url())&&isLoggedIn&&$location.path("/403"),!routeAuthor($location.url())||isAuthor||isAdmin||$location.path("/403"),routeAdmin($location.url())&&!isAdmin&&$location.path("/403")}),crucioApp.factory("Page",function(){var title="Crucio",nav="";return{title:function(){return title},setTitle:function(arg){title=arg},nav:function(){return nav},setNav:function(arg){nav=arg},set_title_and_nav:function(new_title,new_nav){title=new_title,nav=new_nav}}}),crucioApp.service("Selection",function(){this.is_element_included=function(element,search_dictionary){for(var key in search_dictionary)if("query"==key){var query_string="";search_dictionary.query_keys.forEach(function(query_key){query_string+=element[query_key]+" "});for(var substring_array=search_dictionary.query.toLowerCase().split(" "),i=0,len=substring_array.length;len>i;++i){var substring=substring_array[i];if(query_string.toLowerCase().indexOf(substring)<0&&substring)return!1}}else if("group"==key){if(search_dictionary.group!=element.group_name&&search_dictionary.group)return!1}else if("query_keys"!=key&&search_dictionary[key]!=element[key]&&search_dictionary[key])return!1;return!0},this.count=function(list,search_dictionary){if(!list)return 0;for(var counter=0,i=0;i<list.length;i++)this.is_element_included(list[i],search_dictionary)&&counter++;return counter},this.find_distinct=function(list,search_key){var result=[];return list.forEach(function(entry){-1==result.indexOf(entry[search_key])&&result.push(entry[search_key])}),result.sort(),result}}),crucioApp.filter("cut",function(){return function(value,wordwise,max,tail){if(!value)return"";if(max=parseInt(max,10),!max)return value;if(value.length<=max)return value;if(value=value.substr(0,max),wordwise){var lastspace=value.lastIndexOf(" ");-1!=lastspace&&(value=value.substr(0,lastspace))}return value+(tail||" ?")}}),Array.prototype.getIndexBy=function(name,value){for(var i=0;i<this.length;i++)if(this[i][name]==value)return i},Array.prototype.getArrayByKey=function(name){for(var array=[],i=0;i<this.length;i++)this[i][name]&&array.push(this[i]);return array},angular.module("crucioModule",[]).controller("titleCtrl",function($scope,Page){$scope.Page=Page}).controller("contactCtrl",function($scope,Page,$routeParams,$http,$location,$modal){$scope.user=angular.fromJson(sessionStorage.user);var route_params=$location.search();$scope.question_id=route_params.question_id,$scope.subject=route_params.s,"Antwort"==$scope.subject&&($scope.subject="Falsche Antwort"),$scope.text="",$scope.user&&($scope.name=$scope.user.username,$scope.email=$scope.user.email),$scope.question_id&&$http.get("api/v1/questions/"+$scope.question_id).success(function(data){$scope.question=data.question}),$scope.is_working=0,$scope.$watch("name",function(newValue,oldValue){$scope.error_no_name=0},!0),$scope.$watch("email",function(newValue,oldValue){$scope.error_no_email=0},!0),$scope.validate_email=function(email){var regex=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return regex.test(email)?!1:!0},$scope.send_mail=function(){var text=$scope.text,destination="kontakt@crucio-leipzig.de",validation_passed=1;if($scope.name||(validation_passed=0,$scope.error_no_name=1),$scope.validate_email($scope.email)&&(validation_passed=0,$scope.error_no_email=1),validation_passed)if($scope.is_working=1,$scope.question_id){destination+=", "+$scope.question.email;var post_data={name:$scope.name,email:$scope.email.replace("@","(@)"),text:text,question_id:$scope.question_id,author:$scope.question.username,question:$scope.question.question,exam_id:$scope.question.exam_id,subject:$scope.question.subject,date:$scope.question.date,author_email:$scope.question.email,mail_subject:$scope.subject};$http.post("api/v1/contact/send-mail-question",post_data).success(function(data){$scope.is_working=0,$scope.open()})}else{var post_data={name:$scope.name,email:$scope.email.replace("@","(@)"),text:text};$http.post("api/v1/contact/send-mail",post_data).success(function(data){$scope.is_working=0,$scope.open()})}},$scope.open=function(){$modal.open({templateUrl:"myModalContent.html"})}}).controller("aboutCtrl",function($scope){$scope.user=angular.fromJson(sessionStorage.user)}).controller("blogCtrl",function($scope){$scope.user=angular.fromJson(sessionStorage.user)}).controller("errorCtrl",function($scope,Page){Page.set_title_and_nav("Fehler | Crucio",""),$scope.user=angular.fromJson(sessionStorage.user)}),angular.module("learnModule",[]).controller("questionsCtrl",function($scope,Page,$location,$http,Selection){Page.set_title_and_nav("Lernen | Crucio","Lernen"),$scope.user=angular.fromJson(sessionStorage.user),$scope.user||window.location.replace(base_url),$scope.exam_search={subject:"",semester:"",query:"",query_keys:["subject","semester","date"]},$scope.comment_search={query:"",query_keys:["comment","username","question_id"]},$scope.tag_search={query:"",query_keys:["tag"]},$scope.subject_list=subject_list,$scope.question_field_message="",$scope.selection_subject_list={},$scope.selection_number_questions=0,$scope.number_questions_in_choosen_subjects=0,$scope.conditions=1;var spinner=new Spinner({length:0,radius:18,color:"#333",shadow:!1});$("#numberSlider").slider({value:$scope.selection_number_questions,step:10,min:0,max:$scope.number_questions_in_choosen_subjects}),$scope.$watch("selection_subject_list",function(newValue,oldValue){var post_data={ignoreLoadingBar:!0,selection_subject_list:$scope.selection_subject_list};$http.post("api/v1/learn/number-questions",post_data).success(function(data){$scope.number_questions_in_choosen_subjects=data.number_questions,0==$scope.selection_number_questions&&($scope.selection_number_questions=Math.min($scope.number_questions_in_choosen_subjects,50)),$scope.selection_number_questions>$scope.number_questions_in_choosen_subjects&&($scope.selection_number_questions=$scope.number_questions_in_choosen_subjects)})},!0),$scope.$watch("number_questions_in_choosen_subjects",function(newValue,oldValue){var max=$scope.number_questions_in_choosen_subjects;max>200&&(max=200);var step=10;100>max&&(step=10),40>max&&(step=4),20>max&&(step=1),200>max&&max%step!=0&&(max+=step),$("#numberSlider").slider({value:$scope.selection_number_questions,step:step,min:0,max:max})},!0),$http.get("api/v1/exams/user_id/"+$scope.user.user_id).success(function(data){$scope.exams=data.exam,$scope.distinct_semesters=Selection.find_distinct($scope.exams,"semester"),$scope.distinct_subjects=Selection.find_distinct($scope.exams,"subject"),$scope.abstract_exams=[],$scope.exams.forEach(function(entry){var select=!0;entry.semester!=$scope.user.semester&&(select=!1),"unbekannt"==entry.date&&(select=!1),$scope.exams.length>10&&entry.question_count<30&&(select=!1),entry.answered_questions>0&&(select=!0),select&&(entry.answered_questions>0?$scope.abstract_exams.unshift(entry):$scope.abstract_exams.push(entry))}),$scope.ready=1}),$http.get("api/v1/tags/"+$scope.user.user_id).success(function(data){$scope.tags=data.tags,$scope.distinct_tags=[],$scope.tags.forEach(function(entry){entry.tags.split(",").forEach(function(tagText){-1==$scope.distinct_tags.indexOf(tagText)&&$scope.distinct_tags.push(tagText)})}),$scope.questions_by_tag={},$scope.distinct_tags.forEach(function(distinct_tag){$scope.questions_by_tag[distinct_tag]=[]}),$scope.distinct_tags.forEach(function(distinct_tag){$scope.tags.forEach(function(entry){entry.tags.split(",").forEach(function(tagText){distinct_tag==tagText&&$scope.questions_by_tag[distinct_tag].push(entry)})})})}),$http.get("api/v1/comments/"+$scope.user.user_id).success(function(data){$scope.comments=data.comments,$scope.questions_by_comment={},$scope.comments.forEach(function(c){$scope.questions_by_comment[c.question]=[]}),$scope.comments.forEach(function(c){$scope.questions_by_comment[c.question].push(c)})}),$scope.learn_exam=function(exam_id){var random=1;$http.get("api/v1/exams/action/prepare/"+exam_id+"/"+random).success(function(data){var questionList={list:data.list};questionList.exam_id=exam_id,sessionStorage.currentQuestionList=angular.toJson(questionList),$location.path("/question").search("id",questionList.list[0].question_id)})},$scope.learn_subjects=function(){var post_data={selection_subject_list:$scope.selection_subject_list,selection_number_questions:$scope.selection_number_questions};$http.post("api/v1/learn/prepare",post_data).success(function(data){var questionList={list:data.list};questionList.selection_subject_list=data.selection_subject_list,sessionStorage.currentQuestionList=angular.toJson(questionList),$location.path("/question").search("id",questionList.list[0].question_id)})},$scope.reset_results=function(index){var exam_id=$scope.exams[index].exam_id;$scope.exams[index].answered_questions=0;var post_data={};$http["delete"]("api/v1/results/"+$scope.user.user_id+"/"+exam_id,post_data).success(function(data){})},$scope.reset_abstract_results=function(index){var exam_id=$scope.abstract_exams[index].exam_id;$scope.abstract_exams[index].answered_questions=0;var post_data={};$http["delete"]("api/v1/results/"+$scope.user.user_id+"/"+exam_id,post_data).success(function(data){})},$scope.toggle_selection=function(subject,category,checked){var selection=$scope.selection_subject_list,subjects=$scope.subject_list;if(checked||(checked=!1),Object.keys(selection).indexOf(subject)>-1)if(0==selection[subject].length)"all"==category&&delete selection[subject];else if(selection[subject].length>0)if("all"==category)checked?delete selection[subject]:selection[subject]=subjects[subject].slice(0);else{var idx=selection[subject].indexOf(category);idx>-1?(selection[subject].splice(idx,1),0==selection[subject].length&&delete selection[subject]):selection[subject].push(category)}else selection[subject]="all"==category?subjects[subject].slice(0):[category];else selection[subject]="all"==category?subjects[subject].slice(0):[category]},$scope.search_question=function(){$scope.search_results=[];var query_question=$scope.question_search_query;if($scope.question_field_message="",query_question.length){spinner.spin(document.getElementById("spinner"));{({query:query_question,subject:$scope.question_search_subject,semester:$scope.question_search_semester})}$http.get("api/v1/questions/search/"+$scope.question_search_query+"/"+$scope.user.user_id).success(function(data){spinner.stop(),0==data.result.length?$scope.question_field_message="Nichts gefunden ;(":data.result.length>100?$scope.question_field_message="Zu Viel gefunden, geht es ein bisschen konkreter? ;(":$scope.search_results=data.result})}},$scope.exam_in_selection=function(index){return Selection.is_element_included($scope.exams[index],$scope.exam_search)},$scope.exam_in_selection_count=function(){return Selection.count($scope.exams,$scope.exam_search)},$scope.comment_in_selection=function(index){return Selection.is_element_included($scope.comments[index],$scope.comment_search)},$scope.comment_in_selection_count=function(){return Selection.count($scope.comments,$scope.comment_search)}}).controller("examCtrl",function($scope,$rootScope,$routeParams,Page,$http,$location,$modal){Page.set_title_and_nav("Klausur | Crucio","Lernen"),$scope.user=angular.fromJson(sessionStorage.user),$scope.exam_id=$routeParams.id,$scope.questionList={exam_id:$scope.exam_id,list:[]},$scope.Math=window.Math,$scope.current_index=0,$http.get("api/v1/exams/"+$scope.exam_id).success(function(data){$scope.exam=data;var questions=$scope.exam.questions;for(i=0;i<questions.length;i++){var q=questions[i];$scope.questionList.list[i]=q}}),$scope.save_answer=function(question_i,given_answer){$scope.questionList.list[question_i].given_result=String(given_answer)},$scope.scroll_to_top=function(){$(window).scrollTop(0)},$scope.hand_exam=function(){sessionStorage.currentQuestionList=angular.toJson($scope.questionList),$location.path("/analysis").search("id",null)},$scope.open_image_model=function(file_name){$modal.open({templateUrl:"imageModalContent.html",controller:"ModalInstanceCtrl",resolve:{image_url:function(){return file_name}}})}}).controller("questionCtrl",function($scope,Page,$routeParams,$http,$location,$modal){Page.set_title_and_nav("Frage | Crucio","Lernen"),$scope.answerButtonClass="btn-primary",$scope.user=angular.fromJson(sessionStorage.user),$scope.questionList=angular.fromJson(sessionStorage.currentQuestionList),$scope.question_id=$routeParams.id,$scope.reset_session=$routeParams.reset_session,$scope.question_id||window.location.replace("/questions"),$scope.show_explanation=0,$scope.given_result=0,$scope.strike={},$scope.reset_session&&($scope.questionList={},sessionStorage.currentQuestionList=angular.toJson($scope.questionList)),$scope.questionList&&Object.keys($scope.questionList).length&&($scope.index=$scope.questionList.list.getIndexBy("question_id",$scope.question_id),$scope.length=$scope.questionList.list.length,$scope.show_answer=$scope.questionList.list[$scope.index].mark_answer,$scope.given_result=$scope.questionList.list[$scope.index].given_result,$scope.questionList.list[$scope.index].strike&&($scope.strike=$scope.questionList.list[$scope.index].strike)),$scope.$watch("strike",function(newValue,oldValue){$scope.questionList&&Object.keys($scope.questionList).length&&($scope.questionList.list[$scope.index].strike=newValue,sessionStorage.currentQuestionList=angular.toJson($scope.questionList))},!0),$http.get("api/v1/questions/"+$scope.question_id+"/user/"+$scope.user.user_id).success(function(data){if($scope.question=data,$scope.question.question_image_url&&($scope.question.question_image_url="/public/files/"+$scope.question.question_image_url),$scope.question.comments)for(var i=0;i<$scope.question.comments.length;i++)$scope.question.comments[i].voting=parseInt($scope.question.comments[i].voting)||0,$scope.question.comments[i].user_voting=parseInt($scope.question.comments[i].user_voting)||0;

var tags=[];$scope.question.tags&&(tags=$scope.question.tags.split(",")),$("#tagInput").tagsManager({prefilled:tags,maxTags:5,replace:!0,output:null,tagsContainer:null,tagCloseIcon:"&times;",tagClass:"tm-tag-error",onlyTagList:!1,createHandler:function(tagManager,tags){var post_data={tags:tags,question_id:$scope.question_id,user_id:$scope.user.user_id};$http.post("api/v1/tags",post_data).success(function(data){})},removeHandler:function(tagManager,tags){var post_data={tags:tags,question_id:$scope.question_id,user_id:$scope.user.user_id};$http.post("api/v1/tags",post_data).success(function(data){})}}),$scope.given_result&&$scope.check_answer($scope.given_result),$scope.show_answer&&$scope.mark_answer($scope.given_result)}),$scope.show_solution=function(){var correct_answer=$scope.correct_answer(),correct=correct_answer==$scope.given_result?1:0;0==correct_answer&&(correct=-1),1==$scope.question.type&&(correct=-1);var post_data={correct:correct,question_id:$scope.question_id,user_id:$scope.user.user_id,given_result:$scope.given_result};$http.post("api/v1/results",post_data).success(function(data){}),$scope.questionList&&Object.keys($scope.questionList).length&&($scope.questionList.list[$scope.index].mark_answer=1,sessionStorage.currentQuestionList=angular.toJson($scope.questionList)),$scope.mark_answer($scope.given_result)},$scope.save_answer=function(given_answer){$scope.given_result=given_answer,$scope.questionList&&Object.keys($scope.questionList).length&&($scope.questionList.list[$scope.index].given_result=given_answer,sessionStorage.currentQuestionList=angular.toJson($scope.questionList))},$scope.check_answer=function(answer){$scope.checked_answer=answer},$scope.correct_answer=function(){return $scope.question.correct_answer},$scope.mark_answer=function(given_answer){$scope.mark_answer_free=!0;var type=$scope.question.type,correct_answer=$scope.correct_answer();type>1?($scope.check_answer(given_answer),given_answer==correct_answer?($scope.correctAnswer=given_answer,$scope.answerButtonClass="btn-success"):($scope.wrongAnswer=given_answer,$scope.correctAnswer=correct_answer,$scope.answerButtonClass="btn-danger")):1==type&&($scope.answerButtonClass="btn-info")},$scope.add_comment=function(){var now=new Date/1e3,post_data={comment:$scope.commentText,question_id:$scope.question_id,reply_to:0,username:$scope.user.username,date:now};$http.post("api/v1/comments/"+$scope.user.user_id,post_data).success(function(data){post_data.voting=0,post_data.user_voting=0,post_data.comment_id=data.comment_id,$scope.question.comments.push(post_data),$scope.commentText=""})},$scope.delete_comment=function(index){var comment_id=$scope.question.comments[index].comment_id;$http["delete"]("api/v1/comments/"+comment_id).success(function(data){}),$scope.question.comments.splice(index,1)},$scope.increase_user_voting=function(current_user_voting,comment_id){var result=1==current_user_voting?1:current_user_voting+1,post_data={user_voting:result};return $http.post("api/v1/comments/"+comment_id+"/user/"+$scope.user.user_id,post_data).success(function(data){}),result},$scope.decrease_user_voting=function(current_user_voting,comment_id){var result=-1==current_user_voting?-1:current_user_voting-1,post_data={user_voting:result};return $http.post("api/v1/comments/"+comment_id+"/user/"+$scope.user.user_id,post_data).success(function(data){}),result},$scope.open_image_model=function(){$modal.open({templateUrl:"imageModalContent.html",controller:"ModalInstanceCtrl",resolve:{image_url:function(){return $scope.question.question_image_url}}})}}).controller("ModalInstanceCtrl",function($scope,$modalInstance,image_url){$scope.image_url=image_url}).controller("analysisCtrl",function($scope,Page,$http){Page.set_title_and_nav("Analyse | Crucio","Lernen"),$scope.user=angular.fromJson(sessionStorage.user),$scope.questionList=angular.fromJson(sessionStorage.currentQuestionList);for(var i=0;i<$scope.questionList.list.length;i++){var question=$scope.questionList.list[i];if(!question.mark_answer){if(question.type>1&&question.given_result>0){var correct=question.correct_answer==question.given_result?1:0;0==question.correct_answer&&(correct=-1);var post_data={correct:correct,question_id:question.question_id,user_id:$scope.user.user_id,given_answer:question.given_result};$http.post("api/v1/results",post_data).success(function(data){})}question.mark_answer="analysis"}}$scope.workedQuestionList=$scope.questionList.list.getArrayByKey("given_result"),$scope.exam_id=$scope.questionList.exam_id,$scope.all_question_count=$scope.questionList.list.length,$scope.worked_question_count=$scope.workedQuestionList.length,$scope.correct_q_count=0,$scope.wrong_q_count=0,$scope.seen_q_count=0,$scope.solved_q_count=0,$scope.free_q_count=0,$scope.no_answer_q_count=0,$scope.get_random=function(min,max){if(min>max)return-1;if(min==max)return min;var r;do r=Math.random();while(1==r);return min+parseInt(r*(max-min+1))},$scope.random=$scope.get_random(0,1e3);for(var i=0;i<$scope.worked_question_count;i++){var question=$scope.workedQuestionList[i];question.correct_answer==question.given_result&&question.given_result>0&&question.correct_answer>0&&$scope.correct_q_count++,question.correct_answer!=question.given_result&&question.given_result>0&&question.correct_answer>0&&$scope.wrong_q_count++,question.given_result>0&&$scope.solved_q_count++,question.given_result>-2&&$scope.seen_q_count++,1==question.type&&$scope.free_q_count++,0==question.correct_answer&&1!=question.type&&$scope.no_answer_q_count++}$scope.exam_id&&$http.get("api/v1/exams/"+$scope.exam_id).success(function(data){$scope.exam=data})}).controller("statisticsCtrl",function($scope,Page,$http){Page.set_title_and_nav("Statistik | Crucio","Lernen"),$scope.user=angular.fromJson(sessionStorage.user)}).filter("newline_to_br",function($sce){return function(text){return void 0!==text?text.replace(/\n/g,"<br>"):void 0}}).directive("timeago",function(){var strings={prefixAgo:"vor",prefixFromNow:"in",suffixAgo:"",suffixFromNow:"",seconds:"wenigen Sekunden",minute:"etwa einer Minute",minutes:"%d Minuten",hour:"etwa einer Stunde",hours:"%d Stunden",day:"etwa einem Tag",days:"%d Tagen",month:"etwa einem Monat",months:"%d Monaten",year:"etwa einem Jahr",years:"%d Jahren",wordSeparator:" ",numbers:[]};return{restrict:"A",link:function(scope,element,attrs){attrs.$observe("timeago",function(){function is_function(functionToCheck){var getType={};return functionToCheck&&"[object Function]"===getType.toString.call(functionToCheck)}function substitute(stringOrFunction,number){var string=is_function(stringOrFunction)?stringOrFunction(number,distance_millis):stringOrFunction,value=strings.numbers&&strings.numbers[number]||number;return string.replace(/%d/i,value)}var given=parseInt(attrs.timeago),current=(new Date).getTime(),distance_millis=Math.abs(current-given),seconds=distance_millis/1e3,minutes=seconds/60,hours=minutes/60,days=hours/24,years=days/365,prefix=strings.prefixAgo,suffix=strings.suffixAgo,words=45>seconds&&substitute(strings.seconds,Math.round(seconds))||90>seconds&&substitute(strings.minute,1)||45>minutes&&substitute(strings.minutes,Math.round(minutes))||90>minutes&&substitute(strings.hour,1)||24>hours&&substitute(strings.hours,Math.round(hours))||42>hours&&substitute(strings.day,1)||30>days&&substitute(strings.days,Math.round(days))||45>days&&substitute(strings.month,1)||365>days&&substitute(strings.months,Math.round(days/30))||1.5>years&&substitute(strings.year,1)||substitute(strings.years,Math.round(years)),separator=strings.wordSeparator;String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")};var result=[prefix,words,suffix].join(separator).trim();element.text(result)})}}}),angular.module("userModule",["ipCookie"]).controller("registerCtrl",function($scope,Page,$route,$http,Validate){$scope.user=angular.fromJson(sessionStorage.user),$scope.is_working=0,$scope.semester=1,$scope.course=1,$scope.$watch("username",function(newValue,oldValue){newValue!=oldValue&&($scope.error_no_name=!Validate.non_empty(newValue),$scope.error_duplicate_name=0)},!0),$scope.$watch("email",function(newValue,oldValue){newValue!=oldValue&&($scope.error_no_email=!Validate.email(newValue),$scope.error_duplicate_email=0)},!0),$scope.$watch("password",function(newValue,oldValue){newValue!=oldValue&&($scope.error_no_password=!Validate.password(newValue))},!0),$scope.register=function(){var validation_passed=1;if($scope.username||(validation_passed=0,$scope.error_no_name=1),Validate.email($scope.email)||(validation_passed=0,$scope.error_no_email=1),Validate.password($scope.password)||(validation_passed=0,$scope.error_no_password=1),$scope.password!=$scope.passwordc&&(validation_passed=0),validation_passed){$scope.is_working=1;var post_data={username:$scope.username,email:$scope.email.replace("@","(@)"),semester:$scope.semester,course:$scope.course,password:$scope.password};$http.post("api/v1/users",post_data).success(function(data){$scope.is_working=0,"success"==data.status?$("#registerSucessModal").modal("show"):"error_username_taken"==data.status?$scope.error_duplicate_name=1:"error_email_taken"==data.status&&($scope.error_duplicate_email=1)})}}}).controller("activateCtrl",function($scope,Page,$route,$http,$location){if($scope.user=angular.fromJson(sessionStorage.user),$scope.token=$location.search().token,$scope.token){var post_data={token:$scope.token};$http.post("api/v1/users/action/activate",post_data).success(function(data){"error_unknown"==data.status?($scope.success=0,$scope.error_no_token=0,$scope.error_unknown=1):"error_no_token"==data.status?($scope.success=0,$scope.error_no_token=1,$scope.error_unknown=0):"success"==data.status&&($scope.success=1,$scope.error_no_token=0,$scope.error_unknown=0)})}else $scope.success=0,$scope.error_no_token=1}).controller("forgotPasswordCtrl",function($scope,$location,Page,$route,$http){if($scope.user=angular.fromJson(sessionStorage.user),$scope.confirm=$location.search().confirm,$scope.deny=$location.search().deny,$scope.is_working=0,$scope.error_email=0,$scope.error_already_requested=0,$scope.confirm||$scope.deny||($scope.reset=1),$scope.confirm){$scope.reset=0;var post_data={token:$scope.confirm};$http.post("api/v1/users/password/confirm",post_data).success(function(data){$scope.status=data.status,$("#forgotConfirmModal").modal("show")})}if($scope.deny){$scope.reset=0;var post_data={token:$scope.deny};$http.post("api/v1/users/password/deny",post_data).success(function(data){$scope.status=data.status,$("#forgotDenyModal").modal("show")})}$scope.$watch("user.email",function(newValue,oldValue){$scope.error_email=0,$scope.error_already_requested=0},!0),$scope.reset_password=function(){var validate=!0;if($scope.user?$scope.user.email||(validate=!1,$scope.error_email=1):(validate=!1,$scope.error_email=1),validate){$scope.is_working=1;var post_data={email:$scope.user.email.replace("@","(@)")};$http.post("api/v1/users/password/reset",post_data).success(function(data){$scope.is_working=0,data?"success"==data.status?($scope.error_email=0,$scope.error_already_requested=0,$("#forgotSucessModal").modal("show")):"error_email"==data.status?$scope.error_email=1:"error_already_requested"==data.status&&($scope.error_already_requested=1):$scope.error_email=1})}}}).controller("loginCtrl",function($scope,Page,$route,$http,ipCookie){$scope.user=angular.fromJson(sessionStorage.user),$scope.email="",$scope.remember_me=1,$scope.password="",$scope.login_error=!1,$scope.$watch("email",function(newValue,oldValue){$scope.login_error=!1},!0),$scope.$watch("password",function(newValue,oldValue){$scope.login_error=!1},!0),$scope.login=function(){-1==$scope.email.indexOf("@")&&($scope.email+="@studserv.uni-leipzig.de");var post_data={email:$scope.email.replace("@","(@)"),remember_me:$scope.remember_me,password:$scope.password};$http.post("api/v1/users/action/login",post_data).success(function(data){"success"==data.login?(1==$scope.remember_me&&ipCookie("CrucioUser",data.logged_in_user,{expires:21}),sessionStorage.user=angular.toJson(data.logged_in_user),window.location.replace("/questions")):$scope.login_error=!0})}}).controller("logoutCtrl",function($scope,Page,ipCookie){$scope.Page=Page,$scope.user=angular.fromJson(sessionStorage.user),$scope.logout=function(){sessionStorage.user=angular.toJson({}),ipCookie.remove("CrucioUser"),window.location.replace(base_url)}}).controller("accountCtrl",function($scope,Page,$http,Validate){Page.set_title_and_nav("Account | Crucio","Name"),$scope.user=angular.fromJson(sessionStorage.user),$scope.user.semester=parseInt($scope.user.semester),$scope.Validate=Validate,$scope.old_password="",$scope.wrong_password=!1,$scope.submit_button_title="Speichern",$scope.$watch("user.email",function(newValue,oldValue){newValue!=oldValue&&($scope.submit_button_title="Speichern")},!0),$scope.$watch("old_password",function(newValue,oldValue){newValue!=oldValue&&($scope.submit_button_title="Speichern",$scope.wrong_password=!1)},!0),$scope.$watch("new_password",function(newValue,oldValue){newValue!=oldValue&&($scope.submit_button_title="Speichern")},!0),$scope.$watch("new_password_c",function(newValue,oldValue){newValue!=oldValue&&($scope.submit_button_title="Speichern")},!0),$scope.save_user=function(){var validate=!0;if(Validate.email($scope.user.email)||(validate=!1),$scope.user.semester<1&&(validate=!1),$scope.user.semester>30&&(validate=!1),$scope.old_password.length>0&&($scope.new_password.length<6&&(validate=!1),$scope.new_password!=$scope.new_password_c&&(validate=!1)),validate){$scope.submit_button_title="Speichern...";var post_data={email:$scope.user.email.replace("@","(@)"),course_id:$scope.user.course_id,semester:$scope.user.semester,current_password:$scope.old_password,password:$scope.new_password};$http.put("api/v1/users/"+$scope.user.user_id+"/account",post_data).success(function(data,status,headers){"success"==data.status?(sessionStorage.user=angular.toJson($scope.user),$scope.submit_button_title="Gespeichert"):($scope.user=angular.fromJson(sessionStorage.user),$scope.user.semester=parseInt($scope.user.semester),"error_incorrect_password"==data.status&&($scope.wrong_password=!0),$scope.submit_button_title="Speichern nicht möglich...")})}else $scope.submit_button_title="Speichern nicht möglich..."}}).controller("settingsCtrl",function($scope,Page,$http){Page.set_title_and_nav("Einstellungen | Crucio","Name"),$scope.user=angular.fromJson(sessionStorage.user),$("#repetitionSlider").slider({value:$scope.user.repetitionValue}),$scope.submit_button_title="Speichern",$scope.update_user=function(){$scope.submit_button_title="Speichern...";var repetition=$("#repetitionSlider").slider("option","value");$scope.user.repetitionValue=repetition;var post_data={highlightExams:$scope.user.highlightExams,showComments:$scope.user.showComments,repetitionValue:repetition,useAnswers:$scope.user.useAnswers,useTags:$scope.user.useTags};$http.put("api/v1/users/"+$scope.user.user_id+"/settings",post_data).success(function(data){"success"==data.status?(sessionStorage.user=angular.toJson($scope.user),$scope.submit_button_title="Gespeichert"):($scope.user=angular.fromJson(sessionStorage.user),$scope.submit_button_title="Speichern nicht möglich...")})},$scope.remove_all_results=function(){var post_data={};$http["delete"]("api/v1/results/"+$scope.user.user_id,post_data).success(function(data){})}}).service("Validate",function($http){var whitelist=Array();$http.get("api/v1/whitelist").success(function(data,status,headers,config){whitelist=data.whitelist}),this.email=function(email){var regex=/[\wäüöÄÜÖ]*@studserv\.uni-leipzig\.de$/;if(0==whitelist.length)return!0;if(regex.test(email))return!0;for(var i=0;i<whitelist.length;i++)if(whitelist[i].mail_address==email)return!0;return!1},this.password=function(password){return password?password.length<6?!1:!0:!1},this.non_empty=function(text){return 0==text.length?!1:!0}});